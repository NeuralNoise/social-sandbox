<?php

/**
 * FavlikeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginFavlikeTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object FavlikeTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Favlike');
    }

    public static function getIsFavlike($user_id=null, $dest_user_id=null, $record_model=null, $record_id=null) {
        $q = Doctrine_Query::create()
                ->from('favlike f')
                ->where('f.user_id = ?', $user_id)
                ->andWhere('f.dest_user_id = ?', $dest_user_id)
                ->andWhere('f.record_model = ?', $record_model)
                ->andWhere('f.record_id = ?', $record_id);
        
        return $q->fetchOne();
    }
    
    public static function activate($id=null) {
        Doctrine_Query::create()
                ->update('favlike f')
                ->set('f.is_active', '?', true)
                ->where('f.id = ?', $id)
                ->execute();
    }
    
    public function countFavlikes($id=null,$model=null)
    {
         $q = Doctrine_Query::create()
                        ->from('favlike c')
                        ->where('c.record_id = ?',$id)
                        ->andWhere('c.record_model = ?',$model);
        return $q->count();
    }
    public function getFavlikes($user) {
        if (!is_numeric($user)) {
            $datos = Doctrine::getTable('sfGuardUser')->findOneBy('username', $user, Doctrine::HYDRATE_RECORD);
        } else {
            $datos = Doctrine::getTable('sfGuardUser')->find($user);
        }
        $w = Doctrine_Query::create()
                ->from('Favlike i')
                ->where('i.user_id = ?', $datos->getId());
        return count($w->execute());
    }

}