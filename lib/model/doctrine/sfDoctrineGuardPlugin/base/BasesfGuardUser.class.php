<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property integer $sex
 * @property date $birthday
 * @property string $aboutme
 * @property string $profession
 * @property string $music
 * @property string $books
 * @property string $films
 * @property string $television
 * @property string $games
 * @property integer $marital_status
 * @property integer $meeting_sex
 * @property string $hometown
 * @property string $borntown
 * @property integer $smoker
 * @property integer $drinker
 * @property string $education
 * @property string $language
 * @property string $religion
 * @property string $politic
 * @property string $country
 * @property string $city
 * @property string $cp
 * @property string $description
 * @property string $contact
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $Inboxs
 * @property Doctrine_Collection $InboxsDest
 * @property Doctrine_Collection $Albums
 * @property Profile_photo $ProfilePhoto
 * @property Doctrine_Collection $UserLocation
 * @property Doctrine_Collection $UserFavlikes
 * @property Doctrine_Collection $DestUserFavlikes
 * @property Doctrine_Collection $UserComments
 * @property Doctrine_Collection $DestUserComments
 * @property Doctrine_Collection $UserPubs
 * @property Doctrine_Collection $DestUserPubs
 * @property Doctrine_Collection $Audios
 * @property Doctrine_Collection $Playlists
 * @property Doctrine_Collection $Texts
 * @property Doctrine_Collection $Links
 * @property Doctrine_Collection $Following
 * @property Doctrine_Collection $Follower
 * @property Doctrine_Collection $UserNotifications
 * @property Doctrine_Collection $DestUserNotifications
 * @property Doctrine_Collection $SettingsUser
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * 
 * @method string                getFirstName()             Returns the current record's "first_name" value
 * @method string                getLastName()              Returns the current record's "last_name" value
 * @method string                getEmailAddress()          Returns the current record's "email_address" value
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method integer               getSex()                   Returns the current record's "sex" value
 * @method date                  getBirthday()              Returns the current record's "birthday" value
 * @method string                getAboutme()               Returns the current record's "aboutme" value
 * @method string                getProfession()            Returns the current record's "profession" value
 * @method string                getMusic()                 Returns the current record's "music" value
 * @method string                getBooks()                 Returns the current record's "books" value
 * @method string                getFilms()                 Returns the current record's "films" value
 * @method string                getTelevision()            Returns the current record's "television" value
 * @method string                getGames()                 Returns the current record's "games" value
 * @method integer               getMaritalStatus()         Returns the current record's "marital_status" value
 * @method integer               getMeetingSex()            Returns the current record's "meeting_sex" value
 * @method string                getHometown()              Returns the current record's "hometown" value
 * @method string                getBorntown()              Returns the current record's "borntown" value
 * @method integer               getSmoker()                Returns the current record's "smoker" value
 * @method integer               getDrinker()               Returns the current record's "drinker" value
 * @method string                getEducation()             Returns the current record's "education" value
 * @method string                getLanguage()              Returns the current record's "language" value
 * @method string                getReligion()              Returns the current record's "religion" value
 * @method string                getPolitic()               Returns the current record's "politic" value
 * @method string                getCountry()               Returns the current record's "country" value
 * @method string                getCity()                  Returns the current record's "city" value
 * @method string                getCp()                    Returns the current record's "cp" value
 * @method string                getDescription()           Returns the current record's "description" value
 * @method string                getContact()               Returns the current record's "contact" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getEvents()                Returns the current record's "Events" collection
 * @method Doctrine_Collection   getInboxs()                Returns the current record's "Inboxs" collection
 * @method Doctrine_Collection   getInboxsDest()            Returns the current record's "InboxsDest" collection
 * @method Doctrine_Collection   getAlbums()                Returns the current record's "Albums" collection
 * @method Profile_photo         getProfilePhoto()          Returns the current record's "ProfilePhoto" value
 * @method Doctrine_Collection   getUserLocation()          Returns the current record's "UserLocation" collection
 * @method Doctrine_Collection   getUserFavlikes()          Returns the current record's "UserFavlikes" collection
 * @method Doctrine_Collection   getDestUserFavlikes()      Returns the current record's "DestUserFavlikes" collection
 * @method Doctrine_Collection   getUserComments()          Returns the current record's "UserComments" collection
 * @method Doctrine_Collection   getDestUserComments()      Returns the current record's "DestUserComments" collection
 * @method Doctrine_Collection   getUserPubs()              Returns the current record's "UserPubs" collection
 * @method Doctrine_Collection   getDestUserPubs()          Returns the current record's "DestUserPubs" collection
 * @method Doctrine_Collection   getAudios()                Returns the current record's "Audios" collection
 * @method Doctrine_Collection   getPlaylists()             Returns the current record's "Playlists" collection
 * @method Doctrine_Collection   getTexts()                 Returns the current record's "Texts" collection
 * @method Doctrine_Collection   getLinks()                 Returns the current record's "Links" collection
 * @method Doctrine_Collection   getFollowing()             Returns the current record's "Following" collection
 * @method Doctrine_Collection   getFollower()              Returns the current record's "Follower" collection
 * @method Doctrine_Collection   getUserNotifications()     Returns the current record's "UserNotifications" collection
 * @method Doctrine_Collection   getDestUserNotifications() Returns the current record's "DestUserNotifications" collection
 * @method Doctrine_Collection   getSettingsUser()          Returns the current record's "SettingsUser" collection
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method sfGuardUser           setFirstName()             Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()              Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()          Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setSex()                   Sets the current record's "sex" value
 * @method sfGuardUser           setBirthday()              Sets the current record's "birthday" value
 * @method sfGuardUser           setAboutme()               Sets the current record's "aboutme" value
 * @method sfGuardUser           setProfession()            Sets the current record's "profession" value
 * @method sfGuardUser           setMusic()                 Sets the current record's "music" value
 * @method sfGuardUser           setBooks()                 Sets the current record's "books" value
 * @method sfGuardUser           setFilms()                 Sets the current record's "films" value
 * @method sfGuardUser           setTelevision()            Sets the current record's "television" value
 * @method sfGuardUser           setGames()                 Sets the current record's "games" value
 * @method sfGuardUser           setMaritalStatus()         Sets the current record's "marital_status" value
 * @method sfGuardUser           setMeetingSex()            Sets the current record's "meeting_sex" value
 * @method sfGuardUser           setHometown()              Sets the current record's "hometown" value
 * @method sfGuardUser           setBorntown()              Sets the current record's "borntown" value
 * @method sfGuardUser           setSmoker()                Sets the current record's "smoker" value
 * @method sfGuardUser           setDrinker()               Sets the current record's "drinker" value
 * @method sfGuardUser           setEducation()             Sets the current record's "education" value
 * @method sfGuardUser           setLanguage()              Sets the current record's "language" value
 * @method sfGuardUser           setReligion()              Sets the current record's "religion" value
 * @method sfGuardUser           setPolitic()               Sets the current record's "politic" value
 * @method sfGuardUser           setCountry()               Sets the current record's "country" value
 * @method sfGuardUser           setCity()                  Sets the current record's "city" value
 * @method sfGuardUser           setCp()                    Sets the current record's "cp" value
 * @method sfGuardUser           setDescription()           Sets the current record's "description" value
 * @method sfGuardUser           setContact()               Sets the current record's "contact" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setEvents()                Sets the current record's "Events" collection
 * @method sfGuardUser           setInboxs()                Sets the current record's "Inboxs" collection
 * @method sfGuardUser           setInboxsDest()            Sets the current record's "InboxsDest" collection
 * @method sfGuardUser           setAlbums()                Sets the current record's "Albums" collection
 * @method sfGuardUser           setProfilePhoto()          Sets the current record's "ProfilePhoto" value
 * @method sfGuardUser           setUserLocation()          Sets the current record's "UserLocation" collection
 * @method sfGuardUser           setUserFavlikes()          Sets the current record's "UserFavlikes" collection
 * @method sfGuardUser           setDestUserFavlikes()      Sets the current record's "DestUserFavlikes" collection
 * @method sfGuardUser           setUserComments()          Sets the current record's "UserComments" collection
 * @method sfGuardUser           setDestUserComments()      Sets the current record's "DestUserComments" collection
 * @method sfGuardUser           setUserPubs()              Sets the current record's "UserPubs" collection
 * @method sfGuardUser           setDestUserPubs()          Sets the current record's "DestUserPubs" collection
 * @method sfGuardUser           setAudios()                Sets the current record's "Audios" collection
 * @method sfGuardUser           setPlaylists()             Sets the current record's "Playlists" collection
 * @method sfGuardUser           setTexts()                 Sets the current record's "Texts" collection
 * @method sfGuardUser           setLinks()                 Sets the current record's "Links" collection
 * @method sfGuardUser           setFollowing()             Sets the current record's "Following" collection
 * @method sfGuardUser           setFollower()              Sets the current record's "Follower" collection
 * @method sfGuardUser           setUserNotifications()     Sets the current record's "UserNotifications" collection
 * @method sfGuardUser           setDestUserNotifications() Sets the current record's "DestUserNotifications" collection
 * @method sfGuardUser           setSettingsUser()          Sets the current record's "SettingsUser" collection
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('sex', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('aboutme', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('profession', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('music', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('books', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('films', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('television', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('games', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('marital_status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('meeting_sex', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('hometown', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('borntown', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('smoker', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('drinker', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('education', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('language', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('religion', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('politic', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('country', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('city', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('cp', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('contact', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('Event as Events', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Inbox as Inboxs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Inbox as InboxsDest', array(
             'local' => 'id',
             'foreign' => 'dest_user_id'));

        $this->hasMany('Album_photo as Albums', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('Profile_photo as ProfilePhoto', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Location as UserLocation', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Favlike as UserFavlikes', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Favlike as DestUserFavlikes', array(
             'local' => 'id',
             'foreign' => 'dest_user_id'));

        $this->hasMany('Comment as UserComments', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Comment as DestUserComments', array(
             'local' => 'id',
             'foreign' => 'dest_user_id'));

        $this->hasMany('Pubs as UserPubs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Pubs as DestUserPubs', array(
             'local' => 'id',
             'foreign' => 'dest_user_id'));

        $this->hasMany('Audio as Audios', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Playlist as Playlists', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Text as Texts', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Link as Links', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Follow as Following', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Follow as Follower', array(
             'local' => 'id',
             'foreign' => 'follow_id'));

        $this->hasMany('Notification as UserNotifications', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Notification as DestUserNotifications', array(
             'local' => 'id',
             'foreign' => 'dest_user_id'));

        $this->hasMany('Setting_has_User as SettingsUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}