<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $album_id
 * @property string $title
 * @property string $name
 * @property integer $ord
 * @property integer $x1
 * @property integer $y1
 * @property integer $x2
 * @property integer $y2
 * @property Album_photo $Album
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $ProfilePhoto
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method integer             getAlbumId()      Returns the current record's "album_id" value
 * @method string              getTitle()        Returns the current record's "title" value
 * @method string              getName()         Returns the current record's "name" value
 * @method integer             getOrd()          Returns the current record's "ord" value
 * @method integer             getX1()           Returns the current record's "x1" value
 * @method integer             getY1()           Returns the current record's "y1" value
 * @method integer             getX2()           Returns the current record's "x2" value
 * @method integer             getY2()           Returns the current record's "y2" value
 * @method Album_photo         getAlbum()        Returns the current record's "Album" value
 * @method Doctrine_Collection getTags()         Returns the current record's "Tags" collection
 * @method Doctrine_Collection getProfilePhoto() Returns the current record's "ProfilePhoto" collection
 * @method Photo               setId()           Sets the current record's "id" value
 * @method Photo               setAlbumId()      Sets the current record's "album_id" value
 * @method Photo               setTitle()        Sets the current record's "title" value
 * @method Photo               setName()         Sets the current record's "name" value
 * @method Photo               setOrd()          Sets the current record's "ord" value
 * @method Photo               setX1()           Sets the current record's "x1" value
 * @method Photo               setY1()           Sets the current record's "y1" value
 * @method Photo               setX2()           Sets the current record's "x2" value
 * @method Photo               setY2()           Sets the current record's "y2" value
 * @method Photo               setAlbum()        Sets the current record's "Album" value
 * @method Photo               setTags()         Sets the current record's "Tags" collection
 * @method Photo               setProfilePhoto() Sets the current record's "ProfilePhoto" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('ord', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('x1', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('y1', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('x2', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('y2', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Album_photo as Album', array(
             'local' => 'album_id',
             'foreign' => 'id'));

        $this->hasMany('Tags_photo as Tags', array(
             'local' => 'id',
             'foreign' => 'photo_id'));

        $this->hasMany('Profile_photo as ProfilePhoto', array(
             'local' => 'id',
             'foreign' => 'photo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}