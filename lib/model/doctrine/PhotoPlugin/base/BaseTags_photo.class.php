<?php

/**
 * BaseTags_photo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $photo_id
 * @property integer $x1
 * @property integer $y1
 * @property integer $x2
 * @property integer $y2
 * @property string $name
 * @property Photo $Photo
 * 
 * @method integer    getPhotoId()  Returns the current record's "photo_id" value
 * @method integer    getX1()       Returns the current record's "x1" value
 * @method integer    getY1()       Returns the current record's "y1" value
 * @method integer    getX2()       Returns the current record's "x2" value
 * @method integer    getY2()       Returns the current record's "y2" value
 * @method string     getName()     Returns the current record's "name" value
 * @method Photo      getPhoto()    Returns the current record's "Photo" value
 * @method Tags_photo setPhotoId()  Sets the current record's "photo_id" value
 * @method Tags_photo setX1()       Sets the current record's "x1" value
 * @method Tags_photo setY1()       Sets the current record's "y1" value
 * @method Tags_photo setX2()       Sets the current record's "x2" value
 * @method Tags_photo setY2()       Sets the current record's "y2" value
 * @method Tags_photo setName()     Sets the current record's "name" value
 * @method Tags_photo setPhoto()    Sets the current record's "Photo" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTags_photo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tags_photo');
        $this->hasColumn('photo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('x1', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('y1', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('x2', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('y2', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Photo', array(
             'local' => 'photo_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}