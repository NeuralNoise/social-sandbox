<?php

/**
 * BaseFollow
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $follow_id
 * @property integer $is_active
 * @property sfGuardUser $User
 * @property sfGuardUser $DestUser
 * 
 * @method integer     getUserId()    Returns the current record's "user_id" value
 * @method integer     getFollowId()  Returns the current record's "follow_id" value
 * @method integer     getIsActive()  Returns the current record's "is_active" value
 * @method sfGuardUser getUser()      Returns the current record's "User" value
 * @method sfGuardUser getDestUser()  Returns the current record's "DestUser" value
 * @method Follow      setUserId()    Sets the current record's "user_id" value
 * @method Follow      setFollowId()  Sets the current record's "follow_id" value
 * @method Follow      setIsActive()  Sets the current record's "is_active" value
 * @method Follow      setUser()      Sets the current record's "User" value
 * @method Follow      setDestUser()  Sets the current record's "DestUser" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFollow extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('follow');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('follow_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_active', 'integer', null, array(
             'type' => 'integer',
             'default' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as DestUser', array(
             'local' => 'follow_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}