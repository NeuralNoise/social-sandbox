CREATE TABLE album_photo (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, cover_id INT, ord INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE audio (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, filename VARCHAR(255) NOT NULL, description TEXT NOT NULL, plays BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE audio_has_playlist (id BIGINT AUTO_INCREMENT, audio_id BIGINT NOT NULL, pl_id BIGINT NOT NULL, orden INT, INDEX audio_id_idx (audio_id), INDEX pl_id_idx (pl_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, description TEXT NOT NULL, record_model VARCHAR(255) NOT NULL, record_id BIGINT NOT NULL, user_id BIGINT, dest_user_id BIGINT, is_active BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX record_model_record_id_idx (record_model, record_id), INDEX user_id_idx (user_id), INDEX dest_user_id_idx (dest_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description text NOT NULL, date DATE NOT NULL, hour TIME NOT NULL, end_date DATE, end_hour TIME, is_active TINYINT(1) DEFAULT '1' NOT NULL, address VARCHAR(255) NOT NULL, latitude FLOAT(9, 7) NOT NULL, longitude FLOAT(9, 7) NOT NULL, image VARCHAR(255), slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX event_sluggable_idx (slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE favlike (id BIGINT AUTO_INCREMENT, record_model VARCHAR(255) NOT NULL, record_id BIGINT NOT NULL, user_id BIGINT, dest_user_id BIGINT, is_active BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX record_model_record_id_idx (record_model, record_id), INDEX user_id_idx (user_id), INDEX dest_user_id_idx (dest_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE follow (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, follow_id BIGINT NOT NULL, is_active BIGINT DEFAULT 2, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX follow_id_idx (follow_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE inbox (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, dest_user_id BIGINT NOT NULL, title VARCHAR(255), description LONGTEXT NOT NULL, is_active TINYINT(1), reply TINYINT(1), record_id BIGINT, featured TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX dest_user_id_idx (dest_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE link (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, url TEXT NOT NULL, image TEXT NOT NULL, title VARCHAR(255) NOT NULL, site_name VARCHAR(255) NOT NULL, description TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE location (id BIGINT AUTO_INCREMENT, user_id BIGINT, description VARCHAR(255) NOT NULL, is_active BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notification (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, dest_user_id BIGINT NOT NULL, record_model VARCHAR(255) NOT NULL, record_id BIGINT NOT NULL, related_model VARCHAR(255) NOT NULL, created_at datetime, is_active TINYINT(1) DEFAULT '0', INDEX user_id_idx (user_id), INDEX dest_user_id_idx (dest_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE photo (id BIGINT AUTO_INCREMENT, album_id BIGINT, title VARCHAR(255), name VARCHAR(255) NOT NULL, ord INT, x1 BIGINT, y1 BIGINT, x2 BIGINT, y2 BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX album_id_idx (album_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE playlist (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, user_id BIGINT NOT NULL, description text, image VARCHAR(255) NOT NULL, is_active TINYINT(1), plays BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX playlist_sluggable_idx (slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile_photo (id BIGINT AUTO_INCREMENT, photo_id BIGINT NOT NULL, user_id BIGINT NOT NULL, INDEX user_id_idx (user_id), INDEX photo_id_idx (photo_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pubs (id BIGINT AUTO_INCREMENT, record_model VARCHAR(255) NOT NULL, record_id BIGINT NOT NULL, user_id BIGINT, dest_user_id BIGINT, is_active BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX record_model_record_id_idx (record_model, record_id), INDEX user_id_idx (user_id), INDEX dest_user_id_idx (dest_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE setting (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description text, is_active TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE setting_has__user (id BIGINT AUTO_INCREMENT, setting_id BIGINT NOT NULL, user_id BIGINT, is_active TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX setting_id_idx (setting_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tags_photo (id BIGINT AUTO_INCREMENT, photo_id BIGINT NOT NULL, x1 BIGINT NOT NULL, y1 BIGINT NOT NULL, x2 BIGINT NOT NULL, y2 BIGINT NOT NULL, name VARCHAR(255) NOT NULL, INDEX photo_id_idx (photo_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE text (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, description TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), sex INT DEFAULT 0, birthday DATE NOT NULL, aboutme TEXT, profession TEXT, music TEXT, books TEXT, films TEXT, television TEXT, games TEXT, marital_status INT, meeting_sex INT, hometown VARCHAR(128), borntown VARCHAR(128), smoker INT, drinker INT, education VARCHAR(128), language VARCHAR(128), religion VARCHAR(128), politic VARCHAR(128), country VARCHAR(128), city VARCHAR(128), cp VARCHAR(128), description TEXT, contact VARCHAR(128), is_active TINYINT(1) DEFAULT '0', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE album_photo ADD CONSTRAINT album_photo_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE audio ADD CONSTRAINT audio_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE audio_has_playlist ADD CONSTRAINT audio_has_playlist_pl_id_playlist_id FOREIGN KEY (pl_id) REFERENCES playlist(id) ON DELETE CASCADE;
ALTER TABLE audio_has_playlist ADD CONSTRAINT audio_has_playlist_audio_id_audio_id FOREIGN KEY (audio_id) REFERENCES audio(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE comment ADD CONSTRAINT comment_dest_user_id_sf_guard_user_id FOREIGN KEY (dest_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE event ADD CONSTRAINT event_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE favlike ADD CONSTRAINT favlike_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE favlike ADD CONSTRAINT favlike_dest_user_id_sf_guard_user_id FOREIGN KEY (dest_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE follow ADD CONSTRAINT follow_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE follow ADD CONSTRAINT follow_follow_id_sf_guard_user_id FOREIGN KEY (follow_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE inbox ADD CONSTRAINT inbox_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE inbox ADD CONSTRAINT inbox_dest_user_id_sf_guard_user_id FOREIGN KEY (dest_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE link ADD CONSTRAINT link_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE location ADD CONSTRAINT location_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE notification ADD CONSTRAINT notification_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_dest_user_id_sf_guard_user_id FOREIGN KEY (dest_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE photo ADD CONSTRAINT photo_album_id_album_photo_id FOREIGN KEY (album_id) REFERENCES album_photo(id);
ALTER TABLE playlist ADD CONSTRAINT playlist_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE profile_photo ADD CONSTRAINT profile_photo_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE profile_photo ADD CONSTRAINT profile_photo_photo_id_photo_id FOREIGN KEY (photo_id) REFERENCES photo(id) ON DELETE CASCADE;
ALTER TABLE pubs ADD CONSTRAINT pubs_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE pubs ADD CONSTRAINT pubs_dest_user_id_sf_guard_user_id FOREIGN KEY (dest_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE setting_has__user ADD CONSTRAINT setting_has__user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE setting_has__user ADD CONSTRAINT setting_has__user_setting_id_setting_id FOREIGN KEY (setting_id) REFERENCES setting(id) ON DELETE CASCADE;
ALTER TABLE tags_photo ADD CONSTRAINT tags_photo_photo_id_photo_id FOREIGN KEY (photo_id) REFERENCES photo(id) ON DELETE CASCADE;
ALTER TABLE text ADD CONSTRAINT text_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
